<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
        
    <!-- 引入mybatis配置文件，加载spring.xml文件的时候也会加载引入的文件 -->
   <import resource="classpath:config/mybatis.xml"/>
        
   <!-- 开启包扫描 -->
   <context:component-scan base-package="com.pcwang"></context:component-scan>
   <!-- 开启注解 -->
   <context:annotation-config/>
   <!-- 加载外部属性文件，此种方式加载进来的属性文件只能用于spring的配置文件使用 -->
   <context:property-placeholder location="classpath:config/*.properties"/>     
   <!-- 加载外部属性文件，此种方式加载进来的属性文件可以用于任何地方，java类中可通过@Value引用值 -->     
   <util:properties id="properties" location="classpath:config/mysql.properties"></util:properties>
   <!-- 配置数据库连接 -->
   <bean id="alibabaDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
   		<property name="driverClassName">
			<value>${mysql.driverClassName}</value>
		</property>
		<property name="url">
			<value>${mysql.url}</value>
		</property>
		<property name="username">
			<value>${mysql.username}</value>
		</property>
		<property name="password">
			<value>${mysql.password}</value>
		</property>
   		<!-- 连接池中的最大连接数 -->
		<property name="maxActive">
			<value>5</value>
		</property>
		<!-- 初始化的连接数 -->
		<property name="initialSize">
			<value>2</value>
		</property>
		<!-- 获取连接的最大等待时间 -->
		<property name="maxWait">
			<value>6000</value>
		</property>
		<!-- 连接池的最大空闲 -->
		<property name="maxIdle">
			<value>2</value>
		</property>
		<!-- 连接池的最小空闲 -->
		<property name="minIdle">
			<value>2</value>
		</property>
		<!-- 自动清除无用的连接 -->
		<property name="removeAbandoned">
			<value>true</value>
		</property>
		<!-- 自动清除无用的连接的等待时间 -->
		<property name="removeAbandonedTimeout">
			<value>180</value>
		</property>
		<!-- 连接属性 -->
		<property name="connectionProperties">
			<value>clientEncoding=UTF-8</value>
		</property>      
   </bean>
   <!-- 实例化mybatis数据库连接对象,并指定mybatis配置文件和扫描的mapper文件路径 -->
   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
   		<property name="dataSource" ref="alibabaDataSource"/>
   		<property name="configLocation" value="classpath:config/mybatis.xml"/>
   		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
   </bean>
   <!-- mybatis扫描mapper对象类 -->
   <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
   		<property name="basePackage" value="com.pcwang.dao"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
   </bean>
   <!-- spring jdbc的事务管理器 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="alibabaDataSource"/>
    </bean>
    
    <!-- 扫描事务有关的注解@Transactional -->
    <tx:annotation-driven transaction-manager="txManager"></tx:annotation-driven>
    <!-- 事务管理器结束 -->
 </beans>